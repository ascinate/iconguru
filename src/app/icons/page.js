"use client"
import Head from "next/head";
import NavicationSubpage from "../components/NavicationSubpage";
import { useEffect,useState } from "react";
import SidebarFilter from "../components/SidebarFilter";
import Footer from "../components/Footer";
import Image from "next/image";

export default function Icons() {
  const [icons, setIcons] = useState([]);
  const [page, setPage] = useState(1);

  useEffect(() => {
    const fetchIcons = async (page = 1, limit = 10) => {
      try {
        const response = await fetch('https://iconsguru.com/admin/api/icons');
        const data = await response.json();
        setIcons(data.icons); // Assuming the response contains an array of icons in `icons`
      } catch (error) {
        console.error('Error fetching icons:', error);
      }
    };

    fetchIcons();
  }, []);

  return (
      <>
      <Head>
        <title>Listing page</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
       <NavicationSubpage/>
        <main className="conatiner-fluid">
            <div className="row">
                <div className="col-lg-3">
                    <SidebarFilter/>
                </div>
                <div className="col-lg-9">
                    <div className="main-divs g-col-6">
                        <div className="tabsd_divs d-inline-block w-100 mt-3 ps-lg-3">
                            <ul className="nav nav-tabs" role="tablist">
                              <li className="nav-item" role="presentation">
                                <button className="nav-link active ps-0" 
                                data-bs-toggle="tab" data-bs-target="#icons1" type="button" role="tab" aria-controls="icons1"
                                  aria-selected="true">Icons</button>
                              </li>
                              <li className="nav-item" role="presentation">
                                <button className="nav-link" data-bs-toggle="tab" data-bs-target="#interface" type="button"
                                role="tab" aria-controls="interface" aria-selected="false">Interface Icons</button>
                              </li>
                              <li className="nav-item" role="presentation">
                                <button className="nav-link"  data-bs-toggle="tab"
                                data-bs-target="#animated" type="button" role="tab" aria-controls="animated"
                                  aria-selected="false">Animated Icons</button>
                              </li>
                            </ul>
                            <div className="tab-content" id="myTabContent">
                              <div className="tab-pane fade show active" id="icons1" role="tabpanel" aria-labelledby="icons1-tab">
                                  <h4 className="search_heading mt-3"> 2,550 Bag Icons </h4>
                                  <div className="row row-cols-1  row-cols-lg-6 row-cols-xl-6 gy-2 g-lg-2 mt-0">
                                      
                                     
                                      {icons.length === 0 ? (
                                            <div className="col">
                                               <div className="loading-animations">
                                                    <Image loading="lazy" src="/Spinner@1x-1.0s-200px-200px.gif"
                                                              alt="iconsguru"
                                                              width={200}
                                                              height={200} />
                                               </div>
                                            </div>
                                            
                                          ) : (
                                            icons.map((icon) => (
                                            <article key={icon.id} className="svg-item col position-relative">
                                                <button className="btn icons-list p-0" data-bs-toggle="modal" data-bs-target="#modaldetails"> 
                                                   <span dangerouslySetInnerHTML={{ __html: icon.icon_svg }}></span>
                                                </button>
                                                <div className="hover-divs">
                                                    <button type="button" className="btn btn-adds">
                                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="16" height="16" fill="rgba(67,67,67,1)"><path d="M11 11V5H13V11H19V13H13V19H11V13H5V11H11Z"></path></svg>
                                                    </button>
                                                    <button type="button" className="btn btn-downloads">
                                                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="16" height="16" fill="rgba(255,255,255,1)"><path d="M13 10H18L12 16L6 10H11V3H13V10ZM4 19H20V12H22V20C22 20.5523 21.5523 21 21 21H3C2.44772 21 2 20.5523 2 20V12H4V19Z"></path></svg>
                                                    </button>
                                                </div>
                                            </article>
                                            ))
                                          )}
                                      
                           
                                  </div>

                                  <div className="d-flex align-items-center justify-content-center my-5">
                                       <button className="btn btn-pre" onClick={() => setPage(page - 1)}>
                                           <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-left" viewBox="0 0 16 16">
                                              <path fill-rule="evenodd" d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8"/>
                                            </svg>
                                            Previous page
                                            
                                       </button>
                                       <button className="btn btn-next" onClick={() => setPage(page + 1)}>Next page
                                          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-right" viewBox="0 0 16 16">
                                            <path fill-rule="evenodd" d="M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8"/>
                                          </svg>                                 
                                        </button>
                                  </div>
                              </div>
                              <div className="tab-pane fade" id="interface" role="tabpanel" aria-labelledby="interface-tab">
                                  <h4 className="search_heading mt-3"> 2,550 Interface Bag Icons </h4>
                                  <div className="row row-cols-1 row-cols-lg-6 gy-4 g-lg-4 mt-0">
                                     
                
                                  </div>
                              </div>
                              <div className="tab-pane fade" id="animated" role="tabpanel" aria-labelledby="animated-tab">...</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </main>



        <div className="modal fade" id="modaldetails" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
          <div className="modal-dialog modal-xl">
            <div className="modal-content">
              <div className="modal-header">
                
                <button type="button" className="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
              </div>
              <div className="modal-body">
                   <h2> Details </h2>
                  
              </div>
            
            </div>
          </div>
        </div>

        <Footer/>
      </>
  );
}
